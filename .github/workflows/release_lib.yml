name: Generate and Release

on:
  push:
    branches:
      - main

jobs:
  generate-dbc:  
    runs-on: ubuntu-latest
    steps:
      # - name: Set up Python
      #   uses: actions/setup-python@v3
      #   with:
      #     python-version: '3.9'  # Specify the Python version

      # - name: Install cantools
      #   run: python -m pip install cantools  # Install cantools library

      - name: Convert SYM to DBC
        run: |
          mkdir -p ${{ runner.temp }}/dbc
          ls ${{ github.workspace }}
          ls ${{ github.workspace }}
          

  # generate-and-release:
  #   needs: generate-dbc
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/rcmast3r/ccoderdbc:main
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     # - name: Debug Docker permissions
  #     #   run: |
  #     #       mkdir -p ${{ runner.temp }}/out/
  #     #       chown -R 1000:1000 ${{ runner.temp }}/out
  #     #       docker run --rm --user 1000:1000 \
  #     #           -w "/app" \
  #     #           -v "${{ runner.temp }}/out:/out" \
  #     #           ghcr.io/rcmast3r/ccoderdbc:main ls -la /out && mkdir -p /out && chown -R 1000:1000 /out && ls -la /out 

  #     - name: generate code
  #       run: |
  #         mkdir -p /out
  #         cd /app
  #         ./build/coderdbc -rw -dbc ${{ runner.temp }}/dbc/hytech.dbc -out /out -drvname hytech

  #         ls -la /out
      # - name: List generated files
      #   run: |
      #     echo "Generated files in /out:"
      #     ls ${{ runner.temp }}/out
      # - name: Upload generated code as artifact
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: generated-code
      #     path: ${{ runner.temp }}/out

      # # - name: Create Release
      # #   id: create_release
      # #   uses: actions/create-release@v1
      # #   env:
      # #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # #   with:
      # #     tag_name: ${{ github.run_number }}
      # #     release_name: Release ${{ github.run_number }}
      # #     draft: false
      # #     prerelease: false

      # # - name: Upload release asset
      # #   uses: actions/upload-release-asset@v1
      # #   env:
      # #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # #   with:
      # #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      # #     asset_path: /out
      # #     asset_name: can_lib.zip
      # #     asset_content_type: application/zip

